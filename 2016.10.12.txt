今天简单的总结了下SVN和git的使用，也尝试了下github，应该好好提高下自己的英文水平了，梦想有一天不再使用任何翻译软件。

【svn】：集中式的代码管理工具（版本控制工具--版本记录）

1》合并代码：团队操作
2》版本覆盖   冲突
3》删除的历史版本再使用
4》遇到问题时追查提交人，明确责任


【tortoiseSVN】
1》官网
2》验证安装成功               电脑的任意地方鼠标右键查看有没有软件选项


使用：
          1>本地代码，提交到服务器commit提交
          2》从服务器把代码拉下来，下载update
          ****注意：使用之前，一定要先update，然后再commit，

新浪sae

进入用户中心-控制台-云sae-创建云应用-标准环境-创建环境-创建版本

电脑端：新建文件夹-右键checkout--填写地址-点击ok-输入用户名密码（勾选记住密码）--把第一个版本拉回来了（文件夹有绿色的对勾表示下载成功）

SVN的缺点：

     1》不能离开网络，只能在局域网内使用
     2》集中式管理，文件检出或者更新消耗时间过长

目前用的越来越少了

目前越来越火的文件管理方――分布式管理

【git】：分布式管理工具是典型的软件（开源的）

官网      git-scm.com     
下载      分电脑系统版本       一个是图形化的git（效率不高，速度慢）      一个是普通的git（应用的比较多，命令行，效率快）

验证安装成功的方法：任意地方鼠标右键，有两个git的选项     
git GUI          -----》图形管理界面
gitBash          -----》linux命令行


【常见的linux命令】

linux设计的思路：没有提示就是成功

gitBash here
cd      进入文件夹
cd ..     返回上一级

新建目录              touch  a.txt
新建文件夹          mkdir aaa               
删除文件夹          rmdir   aaa                              
清屏                    clear
编辑文件             1》输入vi  a.txt(文件名)
                           2》按下i键（变成insert）开始编辑
                              3》按esc，
                              4》输入：wq   回车
查看文件             cat  a.txt
查看文件目录      ls

where命令


快捷创建和编辑文件方式
echo  内容 >文件名
【git】

git下目录----》叫仓库

把普通目录转化为git仓库
          git   init
在需要转化的目录下右键，  gitBash here   输入git  init

git status               查看工作区的文件和提示可做的工作（是否上传到缓存区）


git区域的划分：工作区       缓存区      仓库 

git add  文件名      把工作区的文件放入缓存区
git  status

git rm --cached  文件名             把缓存区中中add的文件撤回到工作区

git  commit -m  '注释'          把缓存区的文件上线到仓库

git status          然后     git  checkout 文件名               从仓库拉回误删的文件（本地没有，仓库有）

git add  .     代表所有文件

从仓库删除文件
1》git  add .
2》git  commit -m 'del 文件名'
3》git status

回复从仓库删除的文件

git log          操作记录       有对应的commit的序列号  根据序列号可以恢复

注意：只要是add的都是到缓存区，commit的都是到仓库    ，     仓库还是在硬盘中，注意文件备份，
